server:
  port: 8082

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/micro_db
    username: postgres
    password: 1234

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  cloud:
    function:
      definition:
    stream:
      default-binder: kafka_default # binder (tecnología de mensajería) predeterminado
      bindings:
        gameBinding-out-0:
          destination: event.game-created # topic donde se publicarán los mensajes
          binder: kafka_default # referencia al binder kafka_default que se define más abajo
          useNativeDecoding: true
      binders:
        kafka_default: #configuración del binder
          type: kafka # el tipo del binder kafka_default será kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    default:
                      consumer: ## config del consumer (recibe mensajes)
                        configuration:
                          session.timeout.ms: 10000
                          max.poll.records: 10
                      producer: ## config del producer (publica mensajes)
                        compressionType: gzip
                        configuration:
                          max.request.size: 10000

                    binder: ## Config general del binder de Kafka
                      autoAddPartitions: true # añade particiones automáticamente si son necesarias
                      autoCreateTopics: true # crea topics automáticamente si no existen
                      requiredAcks: -1
                      minPartitionCount: 3 # mínimo de particiones para cada topic creado
                      replicationFactor: 1
                      serdeError: logAndContinue
                      broker: localhost:9092 # dirección del broker de kafka